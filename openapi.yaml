openapi: 3.0.3
info:
  title: Scigate API
  description: This is an API to download search results (hitlists and documents) from different data sources
  termsOfService: http://scigate.ch
  contact:
    email: joern@erbguth.net
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Description will be available soon
  url: https://scigate.ch
servers:
  - url: http://v2202109132150164038.luckysrv.de/api
tags:
  - name: search request
    description: Query a database
    externalDocs:
      description: Description will be available soon
      url: https://scigate.ch
  - name: document list request
    description: Request a list of documents
    externalDocs:
      description: Description will be available soon
      url: https://scigate.ch
  - name: status
    description: Access the status of your API Request
    externalDocs:
      description: Description will be available soon
      url: https://scigate.ch
paths:
  /search:
    post:
      tags:
        - search request
      summary: search for documents
      description: search request
      operationId: "api.search"
      requestBody:
        description: search
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/search'
        required: true
      responses:
        '200':
          description: Command executed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result'          
    
  /docs:
    post:
      tags:
        - document list request
      summary: get documents from a list
      description: get document request
      operationId: "api.docs"
      requestBody:
        description: get documents
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/docs'
        required: true
      responses:
        '200':
          description: Command executed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result'          

  /status:
    post:
      tags:
        - status
      summary: Checks status of request
      description: checks status of request
      operationId: "api.status"
      requestBody:
        description: status
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/status'
        required: true
      responses:
        '200':
          description: Command executed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result'

components:
  schemas:
    docs:
      type: object
      properties:
        collection:
          type: string
          example: entscheidsuche
          enum:
            - entscheidsuche
            - swisscovery
            - zora
            - boris
        docids:
          type: array
          items:
            type: string
        getCSV:
          type: boolean
          default: false
        getHTML:
          type: boolean
          default: false
        getJSON:
          type: boolean
          default: true
        getNiceHTML:
          type: boolean
          default: false
        ui:
          type: boolean
          default: false
        getZIP:
          type: boolean
          default: true


  
    search:
      type: object
      properties:
        collection:
          type: string
          example: entscheidsuche
          enum:
            - entscheidsuche
            - swisscovery
            - zora
            - boris
        query:
          type: string
          format: json
          example: Pf√§ndungsbeschluss
        maxHits:
          type: integer
          format: int32
          example: 100
          default: 100
        maxReply:
          type: integer
          format: int32
          example: 50
          default: 50
        getDocs:
          type: boolean
          default: false
        getCSV:
          type: boolean
          default: false
        getHTML:
          type: boolean
          default: false
        getJSON:
          type: boolean
          default: true
        getNiceHTML:
          type: boolean
          default: false
        ui:
          type: boolean
          default: false
        getZIP:
          type: boolean
          default: true

    status:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1234567890123

    result:
      type: object
      properties:
        status:
            type: string
            enum:
              - ok
              - error
        hits:
            type: int32
        fetched:
            type: int32
        maxHits:
            type: int32
        token:
            type: int32
        id:
            type: int32
        requeststatus:
            type: string
            enum:
              - done
              - running
              - error
        job:
            type: string
        last:
            type: string
        start:
            type: string
        json:
            type: string
        erasure:
            type: string
        zip:
            type: string
        html:
            type: string
        nicehtml:
            type: string
        check:
            type: string
        hitsTruncated:
            type: boolean
            
        